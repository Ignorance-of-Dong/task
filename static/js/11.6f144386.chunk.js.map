{"version":3,"sources":["views/Register/index.jsx"],"names":["Register","props","useState","userName","setUserName","password","setPassword","repectPassword","setrepectPassword","isFirstName","setisFirstName","isFirstpws","setisFirstpws","isFirstRepectpws","setisFirstRepectpws","handleRegister","a","fetchRegister","username","history","push","Toasts","error","className","type","placeholder","value","onChange","e","target","onClick"],"mappings":"mMA0FeA,UApFf,SAAkBC,GACd,MAA8BC,mBAAS,IAAvC,mBAAKC,EAAL,KAAeC,EAAf,KACA,EAA8BF,mBAAS,IAAvC,mBAAKG,EAAL,KAAeC,EAAf,KACA,EAA0CJ,mBAAS,IAAnD,mBAAKK,EAAL,KAAqBC,EAArB,KAGA,EAAoCN,mBAAS,GAA7C,mBAAKO,EAAL,KAAkBC,EAAlB,KACA,EAAkCR,mBAAS,GAA3C,mBAAKS,EAAL,KAAiBC,EAAjB,KACA,EAA8CV,mBAAS,GAAvD,mBAAKW,EAAL,KAAuBC,EAAvB,KAGMC,EAAc,uCAAG,sBAAAC,EAAA,yDACnBN,EAAe,GACfE,EAAc,GACdE,EAAoB,GACH,KAAbX,GAAgC,KAAbE,IAAmBE,EAJvB,0EAMTU,YAAc,CAChBC,SAAUf,IAPC,OASfF,EAAMkB,QAAQC,KAAK,SATJ,kDAWfC,YAAO,KAAMC,MAAO,KAXL,0DAAH,qDAepB,OAAO,qBAAKC,UAAU,qBAAf,SACH,sBAAKA,UAAU,mBAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,4CAEJ,sBAAKA,UAAU,gBAAf,UACI,sBACIA,WAAYd,GAAeN,EAAW,iBAAmB,0BAD7D,UAGI,qBAAKoB,UAAU,aAAf,gCACA,uBAAOC,KAAK,OAAOC,YAAY,iCAAQC,MAAOvB,EAAUwB,SAAU,SAACC,GAC/DxB,EAAYwB,EAAEC,OAAOH,OACrBhB,EAAeD,EAAc,OAG5BA,GAAeN,EAAW,KAAO,qBAAKoB,UAAU,kBAAf,+CAK1C,sBAEIA,WAAYZ,GAAcN,EAAW,iBAAmB,0BAF5D,UAII,qBAAKkB,UAAU,aAAf,gCACA,uBAAOC,KAAK,OAAOC,YAAY,iCAAQC,MAAOrB,EAAUsB,SAAU,SAACC,GAC/DtB,EAAYsB,EAAEC,OAAOH,OACrBd,EAAcD,EAAa,OAG1BA,GAAcN,EAAW,KAAO,qBAAKkB,UAAU,kBAAf,+CAKzC,sBACIA,WAAYV,GAAoBN,EAAiB,iBAAmB,0BADxE,UAGI,qBAAKgB,UAAU,aAAf,4CACA,uBAAOC,KAAK,OAAOC,YAAY,iCAAQC,MAAOnB,EAAgBoB,SAAU,SAACC,GACrEpB,EAAkBoB,EAAEC,OAAOH,OAC3BZ,EAAoBD,EAAmB,OAGtCA,GAAoBN,EAAiB,KAAO,qBAAKgB,UAAU,kBAAf,8DAMzD,qBAAKA,UAAU,kBAAkBO,QAAS,WACtCf,KADJ","file":"static/js/11.6f144386.chunk.js","sourcesContent":["import React from \"react\"\r\nimport \"./index.scss\"\r\nimport { useState } from \"react\"\r\nimport { fetchRegister } from \"../../services/fake-services\"\r\nimport Toasts from \"../../component/Loading\";\r\n\r\nfunction Register(props) {\r\n    let [userName, setUserName] = useState(\"\");\r\n    let [password, setPassword] = useState(\"\");\r\n    let [repectPassword, setrepectPassword] = useState(\"\");\r\n\r\n\r\n    let [isFirstName, setisFirstName] = useState(0);\r\n    let [isFirstpws, setisFirstpws] = useState(0);\r\n    let [isFirstRepectpws, setisFirstRepectpws] = useState(0);\r\n\r\n\r\n    const handleRegister = async () => {\r\n        setisFirstName(1)\r\n        setisFirstpws(1)\r\n        setisFirstRepectpws(1)\r\n        if (userName === \"\" || password === \"\" || repectPassword) return;\r\n        try {\r\n            await fetchRegister({\r\n                username: userName\r\n            })\r\n            props.history.push(\"/home\")\r\n        } catch (error) {\r\n            Toasts(error.error, 1000);\r\n        }\r\n    }\r\n\r\n    return <div className=\"register-container\">\r\n        <div className=\"register-content\">\r\n            <div className=\"register-title\">\r\n                <h3>register</h3>\r\n            </div>\r\n            <div className=\"register-form\">\r\n                <div\r\n                    className={!isFirstName || userName ? \"register-input\" : \"register-input is-error\"}\r\n                >\r\n                    <div className=\"form-label\">账号：</div>\r\n                    <input type=\"text\" placeholder=\"请输入账号\" value={userName} onChange={(e) => {\r\n                        setUserName(e.target.value)\r\n                        setisFirstName(isFirstName + 1)\r\n                    }} />\r\n                    {\r\n                        !isFirstName || userName ? null : <div className=\"form-error-text\">\r\n                            请输入账号\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <div\r\n\r\n                    className={!isFirstpws || password ? \"register-input\" : \"register-input is-error\"}\r\n                >\r\n                    <div className=\"form-label\">密码：</div>\r\n                    <input type=\"text\" placeholder=\"请输入密码\" value={password} onChange={(e) => {\r\n                        setPassword(e.target.value)\r\n                        setisFirstpws(isFirstpws + 1)\r\n                    }} />\r\n                    {\r\n                        !isFirstpws || password ? null : <div className=\"form-error-text\">\r\n                            请输入密码\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <div\r\n                    className={!isFirstRepectpws || repectPassword ? \"register-input\" : \"register-input is-error\"}\r\n                >\r\n                    <div className=\"form-label\">确认密码：</div>\r\n                    <input type=\"text\" placeholder=\"请输入密码\" value={repectPassword} onChange={(e) => {\r\n                        setrepectPassword(e.target.value)\r\n                        setisFirstRepectpws(isFirstRepectpws + 1)\r\n                    }} />\r\n                    {\r\n                        !isFirstRepectpws || repectPassword ? null : <div className=\"form-error-text\">\r\n                            请输入确认密码\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"register-button\" onClick={() => {\r\n                handleRegister()\r\n            }}>\r\n                register and login\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\nexport default Register"],"sourceRoot":""}