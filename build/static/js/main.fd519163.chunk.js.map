{"version":3,"sources":["router/index.js","router/routerView.jsx","store/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["routerConfig","config","path","component","React","lazy","exact","meta","isGloblePlayer","RouterView","props","routers","routerList","defaultRouter","to","fallback","map","item","index","Comp","route","children","concat","initialState","count","reducer","state","action","type","Error","Context","createContext","StoreProvider","useReducer","dispatch","Provider","value","RouterViewPro","memo","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4JA6EeA,G,MArEI,CACjBC,OAAQ,CACN,CACEC,KAAM,QACNC,UAAWC,IAAMC,MAAK,kBAAM,gCAC5BC,OAAO,EACPC,KAAM,CACJC,gBAAgB,IAGpB,CACEN,KAAM,SACNC,UAAWC,IAAMC,MAAK,kBAAM,uDAC5BC,OAAO,EACPC,KAAM,CACJC,gBAAgB,IAGpB,CACEN,KAAM,YACNC,UAAWC,IAAMC,MAAK,kBAAM,uDAC5BC,OAAO,EACPC,KAAM,CACJC,gBAAgB,IAGpB,CACEN,KAAM,eACNC,UAAWC,IAAMC,MAAK,kBAAM,sDAC5BC,OAAO,EACPC,KAAM,CACJC,gBAAgB,IAGpB,CACEN,KAAM,cACNC,UAAWC,IAAMC,MAAK,kBAAM,gCAC5BC,OAAO,EACPC,KAAM,CACJC,gBAAgB,IAGpB,CACEN,KAAM,gBACNC,UAAWC,IAAMC,MAAK,kBAAM,gCAC5BC,OAAO,EACPC,KAAM,CACJC,gBAAgB,IAGpB,CACEN,KAAM,UACNC,UAAWC,IAAMC,MAAK,kBAAM,gCAC5BC,OAAO,EACPC,KAAM,CACJC,gBAAgB,IAIpB,CACEN,KAAM,SACNC,UAAWC,IAAMC,MAAK,kBAAM,gCAC5BC,OAAO,EACPC,KAAM,CACJC,gBAAgB,O,8BC5CTC,MA1Bf,SAAoBC,GAChB,IAAIC,EAAUD,EAAMC,QAAUD,EAAMC,QAAUD,EAAME,WAC9CC,EAAgB,cAAC,IAAD,CAAOX,KAAK,IAAIC,UAAW,WAC7C,OAAO,cAAC,IAAD,CAAUW,GAAG,UAAc,KAC1BR,OAAK,GAAT,IACR,OACI,cAAC,IAAD,UACI,cAAC,WAAD,CAAUS,SAAU,wBAApB,SACI,cAAC,IAAD,UAEQJ,EAAQK,KAAI,SAACC,EAAMC,GACf,IAAMC,EAAOF,EAAKd,UAClB,OAAO,cAAC,IAAD,CAAOD,KAAMe,EAAKf,KAAMI,MAAOW,EAAKX,MAAOH,UAAW,SAACQ,GAC1D,OAAO,cAACQ,EAAD,aAAMC,MAAOH,EAAKI,UAAcV,MACnCO,MACTI,OAAOT,U,QCf5BU,EAAe,CAACC,MAAO,GAE7B,SAASC,EAAQC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,YACH,MAAO,CAACJ,MAAOE,EAAMF,MAAQ,GAC/B,IAAK,YACH,MAAO,CAACA,MAAOE,EAAMF,MAAQ,GAC/B,QACE,MAAM,IAAIK,OAIhB,IAAMC,EAAUC,0BAMhB,SAASC,EAAT,GAAsC,IAAbX,EAAY,EAAZA,SACvB,EAA0BY,qBAAWR,EAASF,GAA9C,mBAAOG,EAAP,KAAcQ,EAAd,KAEA,OACE,cAACJ,EAAQK,SAAT,CAAkBC,MAAO,CAACV,EAAOQ,GAAjC,SACGb,ICrBP,IAAMgB,EAAgBC,eAAK7B,GAWZ8B,MAVf,WACE,OACE,cAACP,EAAD,UACE,qBAAKQ,UAAU,OAAf,SACE,cAACH,EAAD,CAAezB,WAAYZ,EAAaC,cCEjCwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fd519163.chunk.js","sourcesContent":["/*\r\n * @Author: zhangzheng\r\n * @Date: 2021-12-15 10:04:58\r\n * @LastEditors: zhangzheng\r\n * @LastEditTime: 2021-12-15 17:21:53\r\n * @Descripttion:\r\n */\r\nimport React from \"react\";\r\nlet routerConfig = {\r\n  config: [\r\n    {\r\n      path: \"/home\",\r\n      component: React.lazy(() => import(\"../views/Home\")),\r\n      exact: true,\r\n      meta: {\r\n        isGloblePlayer: false\r\n      }\r\n    },\r\n    {\r\n      path: \"/login\",\r\n      component: React.lazy(() => import(\"../views/Login\")),\r\n      exact: true,\r\n      meta: {\r\n        isGloblePlayer: false\r\n      }\r\n    },\r\n    {\r\n      path: \"/register\",\r\n      component: React.lazy(() => import(\"../views/Register\")),\r\n      exact: true,\r\n      meta: {\r\n        isGloblePlayer: false\r\n      }\r\n    },\r\n    {\r\n      path: \"/perfectInfo\",\r\n      component: React.lazy(() => import(\"../views/PerfectInfo\")),\r\n      exact: true,\r\n      meta: {\r\n        isGloblePlayer: false\r\n      }\r\n    },\r\n    {\r\n      path: \"/citySights\",\r\n      component: React.lazy(() => import(\"../views/CitySights\")),\r\n      exact: true,\r\n      meta: {\r\n        isGloblePlayer: false\r\n      }\r\n    },\r\n    {\r\n      path: \"/sightsDetail\",\r\n      component: React.lazy(() => import(\"../views/SightsDetail\")),\r\n      exact: true,\r\n      meta: {\r\n        isGloblePlayer: false\r\n      }\r\n    },\r\n    {\r\n      path: \"/survey\",\r\n      component: React.lazy(() => import(\"../views/Survey\")),\r\n      exact: true,\r\n      meta: {\r\n        isGloblePlayer: false\r\n      }\r\n    },\r\n\r\n    {\r\n      path: \"/about\",\r\n      component: React.lazy(() => import(\"../views/About\")),\r\n      exact: false,\r\n      meta: {\r\n        isGloblePlayer: true\r\n      }\r\n    }\r\n  ]\r\n};\r\nexport default routerConfig;\r\n","import React, { Suspense } from 'react';\r\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom'\r\nfunction RouterView(props) {\r\n    let routers = props.routers ? props.routers : props.routerList\r\n    const defaultRouter = <Route path=\"/\" component={() => {\r\n        return <Redirect to=\"/login\" key={22}/>\r\n    }} key={22} exact/>\r\n    return (\r\n        <HashRouter>\r\n            <Suspense fallback={<div></div>}>\r\n                <Switch>\r\n                    {\r\n                        routers.map((item, index) => {\r\n                            const Comp = item.component\r\n                            return <Route path={item.path} exact={item.exact} component={(routers) => {\r\n                                return <Comp route={item.children} {...routers}></Comp>\r\n                            }} key={index}/>\r\n                        }).concat(defaultRouter)\r\n                    }\r\n\r\n                </Switch>\r\n            </Suspense>\r\n        </HashRouter>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default RouterView","import React, { createContext, useReducer, useContext } from 'react';\r\n\r\nconst initialState = {count: 0};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'increment':\r\n      return {count: state.count + 1};\r\n    case 'decrement':\r\n      return {count: state.count - 1};\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nconst Context = createContext();\r\n\r\nfunction useStore() {\r\n  return useContext(Context);\r\n}\r\n\r\nfunction StoreProvider({ children }) {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  return (\r\n    <Context.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </Context.Provider>\r\n  );\r\n}\r\n\r\nexport { useStore, StoreProvider };","import routerConfig from \"./router\";\r\nimport React, { memo } from \"react\";\r\nimport RouterView from \"./router/routerView\";\r\nimport { StoreProvider } from \"../src/store/index.jsx\";\r\n\r\nconst RouterViewPro = memo(RouterView);\r\nfunction App() {\r\n  return (\r\n    <StoreProvider>\r\n      <div className=\"main\">\r\n        <RouterViewPro routerList={routerConfig.config} />\r\n      </div>\r\n    </StoreProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}