{"version":3,"sources":["views/Login/index.jsx"],"names":["Login","props","useState","userName","setUserName","password","setPassword","isFirstName","setisFirstName","isFirstpws","setisFirstpws","handleLogin","a","fetchLogin","history","push","Toasts","error","className","type","placeholder","value","onChange","e","target","onClick"],"mappings":"mMAiEeA,UA5Df,SAAeC,GACX,MAA8BC,mBAAS,IAAvC,mBAAKC,EAAL,KAAeC,EAAf,KACA,EAA8BF,mBAAS,IAAvC,mBAAKG,EAAL,KAAeC,EAAf,KAEA,EAAoCJ,mBAAS,GAA7C,mBAAKK,EAAL,KAAkBC,EAAlB,KACA,EAAkCN,mBAAS,GAA3C,mBAAKO,EAAL,KAAiBC,EAAjB,KAEMC,EAAW,uCAAG,sBAAAC,EAAA,yDAChBJ,EAAe,GACfE,EAAc,GACG,KAAbP,GAAgC,KAAbE,EAHP,0EAKNQ,YAAWV,GALL,OAMZF,EAAMa,QAAQC,KAAd,gCAA4CZ,IANhC,kDAQZa,YAAO,KAAMC,MAAO,KARR,0DAAH,qDAWjB,OAAO,qBAAKC,UAAU,kBAAf,SACH,sBAAKA,UAAU,gBAAf,UACI,qBAAKA,UAAU,cAAf,SACI,yCAEJ,sBAAKA,UAAU,aAAf,UACI,sBAAKA,WAAYX,GAAeJ,EAAW,cAAgB,uBAA3D,UACI,uBAAOgB,KAAK,OAAOC,YAAY,iCAAQC,MAAOlB,EAAUmB,SAAU,SAACC,GAC/DnB,EAAYmB,EAAEC,OAAOH,OACrBb,EAAeD,EAAc,OAG5BA,GAAeJ,EAAW,KAAO,qBAAKe,UAAU,kBAAf,+CAK1C,sBAAKA,WAAYT,GAAcJ,EAAW,cAAgB,uBAA1D,UACI,uBAAOc,KAAK,OAAOC,YAAY,iCAAQC,MAAOhB,EAAUiB,SAAU,SAACC,GAC/DjB,EAAYiB,EAAEC,OAAOH,OACrBX,EAAcD,EAAa,OAG1BA,GAAcJ,EAAW,KAAO,qBAAKa,UAAU,kBAAf,kDAM7C,qBAAKA,UAAU,eAAeO,QAAS,WACnCd,KADJ,mBAKA,qBAAKO,UAAU,eAAeO,QAAS,WACnCxB,EAAMa,QAAQC,KAAK,cADvB,SAGI","file":"static/js/10.fd52c91c.chunk.js","sourcesContent":["import React from \"react\"\r\nimport \"./index.scss\"\r\nimport { useState } from \"react\"\r\nimport { fetchLogin } from \"../../services/fake-services\"\r\nimport Toasts from \"../../component/Loading\";\r\nfunction Login(props) {\r\n    let [userName, setUserName] = useState(\"\");\r\n    let [password, setPassword] = useState(\"\");\r\n\r\n    let [isFirstName, setisFirstName] = useState(0);\r\n    let [isFirstpws, setisFirstpws] = useState(0);\r\n\r\n    const handleLogin = async () => {\r\n        setisFirstName(1)\r\n        setisFirstpws(1)\r\n        if (userName === \"\" || password === \"\") return;\r\n        try {\r\n            await fetchLogin(userName);\r\n            props.history.push(`/perfectInfo?userName=${userName}`)\r\n        } catch (error) {\r\n            Toasts(error.error, 1000);\r\n        }\r\n    }\r\n    return <div className=\"login-container\">\r\n        <div className=\"login-content\">\r\n            <div className=\"login-title\">\r\n                <h3>Login</h3>\r\n            </div>\r\n            <div className=\"login-form\">\r\n                <div className={!isFirstName || userName ? \"login-input\" : \"login-input is-error\"}>\r\n                    <input type=\"text\" placeholder=\"请输入账号\" value={userName} onChange={(e) => {\r\n                        setUserName(e.target.value)\r\n                        setisFirstName(isFirstName + 1)\r\n                    }} />\r\n                    {\r\n                        !isFirstName || userName ? null : <div className=\"form-error-text\">\r\n                            请输入密码\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <div className={!isFirstpws || password ? \"login-input\" : \"login-input is-error\"}>\r\n                    <input type=\"text\" placeholder=\"请输入密码\" value={password} onChange={(e) => {\r\n                        setPassword(e.target.value)\r\n                        setisFirstpws(isFirstpws + 1)\r\n                    }} />\r\n                    {\r\n                        !isFirstpws || password ? null : <div className=\"form-error-text\">\r\n                            请输入密码\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"login-button\" onClick={() => {\r\n                handleLogin()\r\n            }}>\r\n                Login\r\n            </div>\r\n            <div className=\"login-bottom\" onClick={() => {\r\n                props.history.push(\"/register\")\r\n            }}>\r\n                <span>Register</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\nexport default Login"],"sourceRoot":""}