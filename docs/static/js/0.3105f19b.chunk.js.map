{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","assets/image/loading.png","component/Loading/index.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","services/fake-services.js","../node_modules/regenerator-runtime/runtime.js"],"names":["_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Toast","className","value","LodingToast","src","loadImage","alt","ToastLoding","instance","Constructor","TypeError","dom","protoProps","staticProps","this","document","createElement","body","appendChild","ReactDOM","render","removeChild","prototype","CToast","time","div","setTimeout","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","users","cat","username","access","profile","dog","admin","currentId","pinkySwear","withError","promise","res","rej","fetchLogin","fetchRegister","password","fetchUpdateUser","runtime","Op","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","GenStateSuspendedYield","makeInvokeMethod","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function"],"mappings":"2FAAA,SAASA,EAAkBC,EAAQC,GACjC,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACrC,IAAIE,EAAaH,EAAMC,GACvBE,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDC,OAAOC,eAAeT,EAAQI,EAAWM,IAAKN,I,4DCNnC,G,MAAA,IAA0B,qC,OCIzC,SAASO,EAAMV,GACX,OACI,mCACI,qBAAKW,UAAU,aAAf,SAA6BX,EAAMY,UAc/C,SAASC,EAAYb,GACjB,OAAO,mCACH,sBAAKW,UAAU,cAAf,UACI,qBAAKA,UAAU,gBACf,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,aAAf,SACI,qBAAKG,IAAKC,EAAWC,IAAI,cAOtC,IAAMC,EAAb,yBClCe,SAAyBC,EAAUC,GAChD,KAAMD,aAAoBC,GACxB,MAAM,IAAIC,UAAU,qCDgCxB,cAEIC,IAAM,KF1BK,IAAsBF,EAAaG,EAAYC,EEwB9D,OFxBqCJ,EEwBrC,GFxBkDG,EEwBlD,sBAII,WACIE,KAAKH,IAAMI,SAASC,cAAc,OAClCD,SAASE,KAAKC,YAAYJ,KAAKH,KAC/BQ,IAASC,OAAO,cAACjB,EAAD,IAAiBW,KAAKH,OAP9C,kBAUI,WACII,SAASE,KAAKI,YAAYP,KAAKH,UFlCrBvB,EAAkBqB,EAAYa,UAAWV,GACrDC,GAAazB,EAAkBqB,EAAaI,GEsBlD,KAeeU,IArCf,SAAgBrB,EAAOsB,GACnB,IAAIC,EAAMV,SAASC,cAAc,OACjCD,SAASE,KAAKC,YAAYO,GAC1BN,IAASC,OAAO,cAACpB,EAAD,CAAOE,MAAOA,IAAWuB,GACzCC,YAAW,WACPX,SAASE,KAAKI,YAAYI,KAC3BD,K,wCElBPG,EAAOC,QAAU,EAAQ,K,gCCAzB,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQnC,EAAKoC,GACpE,IACE,IAAIC,EAAON,EAAI/B,GAAKoC,GAChBjC,EAAQkC,EAAKlC,MACjB,MAAOmC,GAEP,YADAL,EAAOK,GAILD,EAAKE,KACPP,EAAQ7B,GAERqC,QAAQR,QAAQ7B,GAAOsC,KAAKP,EAAOC,GAIxB,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAO7B,KACP8B,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUR,EAASC,GACpC,IAAIF,EAAMY,EAAGI,MAAMH,EAAMC,GAEzB,SAASX,EAAM/B,GACb2B,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQhC,GAGlE,SAASgC,EAAOa,GACdlB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASa,GAGnEd,OAAMe,OA/BZ,mC,kJCKMC,EAAQ,CACZC,IAAK,CACHC,SAAU,MACVC,OAAQ,OACRC,QAAS,IAEXC,IAAK,CACHH,SAAU,OAGZI,MAAO,CACLJ,SAAU,QACVC,OAAQ,QACRC,QAAS,MAKX,WACE,IAAIG,EAAY,EADlB,GAOF,SAASC,IAAqC,IAExC1B,EACAC,EAHuC,yDAAJ,GAAnB9B,EAAuB,EAAvBA,MAAOwD,EAAgB,EAAhBA,UAIrBC,EAAU,IAAIpB,SAAS,SAACqB,EAAKC,GACjC9B,EAAU6B,EACV5B,EAAS6B,KAYX,OAVAnC,YACE,WACMgC,EACF1B,EAAO,CAAEK,MAAOqB,IAEhB3B,EAAQ7B,KAzCa,KA8CpByD,EAGF,SAASG,EAAWX,GAEzB,MAAgB,QAAbA,EACMM,EAAW,CAAEC,UAAW,oBAE7BT,EAAME,GAKHM,EAAW,CAAEvD,MAAM,2BAAM+C,EAAME,IAAb,IAAwBE,QAAQ,eAAMJ,EAAME,GAAUE,aAJtEI,EAAW,CAAEC,UAAW,eAW5B,SAASK,EAAT,GAA+E,IAAtDZ,EAAqD,EAArDA,SAAqD,KAA3Ca,SAA2C,EAAjCZ,eAAiC,MAAxB,OAAwB,MAAhBC,eAAgB,MAAN,GAAM,EACnF,OAAGJ,EAAME,GACAM,EAAW,CAAEC,UAAW,eAE1BD,IAAajB,MAAM,WAMxB,OALAS,EAAME,GAAY,CAChBA,WACAC,SACAC,QAAQ,eAAMA,IAET,CACLF,WACAC,SACAC,QAAQ,eAAMA,OAKb,SAASY,EAAT,GAAyD,IAA9Bd,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,QAClD,OAAIJ,EAAME,GAGHM,IAAajB,MAAM,WAGxB,OAFAS,EAAME,GAAUC,OAAhB,OAAyBA,QAAzB,IAAyBA,IAAUH,EAAME,GAAUC,OACnDH,EAAME,GAAUE,QAAhB,2BAA+BJ,EAAME,GAAUE,SAAYA,GACpD,2BACFJ,EAAME,IADX,IAEEE,QAAQ,eAAMJ,EAAME,GAAUE,cAPzBI,EAAW,CAAEC,UAAW,iB,mBCjFnC,IAAIQ,EAAW,SAAUtC,GACvB,aAEA,IAEIoB,EAFAmB,EAAKtE,OAAOyB,UACZ8C,EAASD,EAAGE,eAEZC,EAA4B,oBAAXC,OAAwBA,OAAS,GAClDC,EAAiBF,EAAQG,UAAY,aACrCC,EAAsBJ,EAAQK,eAAiB,kBAC/CC,EAAoBN,EAAQO,aAAe,gBAE/C,SAASC,EAAOC,EAAKhF,EAAKG,GAOxB,OANAL,OAAOC,eAAeiF,EAAKhF,EAAK,CAC9BG,MAAOA,EACPR,YAAY,EACZC,cAAc,EACdC,UAAU,IAELmF,EAAIhF,GAEb,IAEE+E,EAAO,GAAI,IACX,MAAO/B,GACP+B,EAAS,SAASC,EAAKhF,EAAKG,GAC1B,OAAO6E,EAAIhF,GAAOG,GAItB,SAAS8E,EAAKC,EAASC,EAASvC,EAAMwC,GAEpC,IAAIC,EAAiBF,GAAWA,EAAQ5D,qBAAqB+D,EAAYH,EAAUG,EAC/EC,EAAYzF,OAAO0F,OAAOH,EAAe9D,WACzCkE,EAAU,IAAIC,EAAQN,GAAe,IAMzC,OAFAG,EAAUI,QAuMZ,SAA0BT,EAAStC,EAAM6C,GACvC,IAAIG,EAAQC,EAEZ,OAAO,SAAgBC,EAAQ1D,GAC7B,GAAIwD,IAAUG,EACZ,MAAM,IAAIC,MAAM,gCAGlB,GAAIJ,IAAUK,EAAmB,CAC/B,GAAe,UAAXH,EACF,MAAM1D,EAKR,OAAO8D,IAMT,IAHAT,EAAQK,OAASA,EACjBL,EAAQrD,IAAMA,IAED,CACX,IAAI+D,EAAWV,EAAQU,SACvB,GAAIA,EAAU,CACZ,IAAIC,EAAiBC,EAAoBF,EAAUV,GACnD,GAAIW,EAAgB,CAClB,GAAIA,IAAmBE,EAAkB,SACzC,OAAOF,GAIX,GAAuB,SAAnBX,EAAQK,OAGVL,EAAQc,KAAOd,EAAQe,MAAQf,EAAQrD,SAElC,GAAuB,UAAnBqD,EAAQK,OAAoB,CACrC,GAAIF,IAAUC,EAEZ,MADAD,EAAQK,EACFR,EAAQrD,IAGhBqD,EAAQgB,kBAAkBhB,EAAQrD,SAEN,WAAnBqD,EAAQK,QACjBL,EAAQiB,OAAO,SAAUjB,EAAQrD,KAGnCwD,EAAQG,EAER,IAAIY,EAASC,EAAS1B,EAAStC,EAAM6C,GACrC,GAAoB,WAAhBkB,EAAOE,KAAmB,CAO5B,GAJAjB,EAAQH,EAAQlD,KACZ0D,EACAa,EAEAH,EAAOvE,MAAQkE,EACjB,SAGF,MAAO,CACLnG,MAAOwG,EAAOvE,IACdG,KAAMkD,EAAQlD,MAGS,UAAhBoE,EAAOE,OAChBjB,EAAQK,EAGRR,EAAQK,OAAS,QACjBL,EAAQrD,IAAMuE,EAAOvE,OA/QP2E,CAAiB7B,EAAStC,EAAM6C,GAE7CF,EAcT,SAASqB,EAASjE,EAAIqC,EAAK5C,GACzB,IACE,MAAO,CAAEyE,KAAM,SAAUzE,IAAKO,EAAGqE,KAAKhC,EAAK5C,IAC3C,MAAOY,GACP,MAAO,CAAE6D,KAAM,QAASzE,IAAKY,IAhBjCnB,EAAQoD,KAAOA,EAoBf,IAAIY,EAAyB,iBACzBiB,EAAyB,iBACzBf,EAAoB,YACpBE,EAAoB,YAIpBK,EAAmB,GAMvB,SAAShB,KACT,SAAS2B,KACT,SAASC,KAIT,IAAIC,EAAoB,GACxBpC,EAAOoC,EAAmB1C,GAAgB,WACxC,OAAO1D,QAGT,IAAIqG,EAAWtH,OAAOuH,eAClBC,EAA0BF,GAAYA,EAASA,EAASG,EAAO,MAC/DD,GACAA,IAA4BlD,GAC5BC,EAAO2C,KAAKM,EAAyB7C,KAGvC0C,EAAoBG,GAGtB,IAAIE,EAAKN,EAA2B3F,UAClC+D,EAAU/D,UAAYzB,OAAO0F,OAAO2B,GAYtC,SAASM,EAAsBlG,GAC7B,CAAC,OAAQ,QAAS,UAAUmG,SAAQ,SAAS5B,GAC3Cf,EAAOxD,EAAWuE,GAAQ,SAAS1D,GACjC,OAAOrB,KAAK4E,QAAQG,EAAQ1D,SAkClC,SAASuF,EAAcpC,EAAWqC,GAChC,SAASC,EAAO/B,EAAQ1D,EAAKJ,EAASC,GACpC,IAAI0E,EAASC,EAASrB,EAAUO,GAASP,EAAWnD,GACpD,GAAoB,UAAhBuE,EAAOE,KAEJ,CACL,IAAIiB,EAASnB,EAAOvE,IAChBjC,EAAQ2H,EAAO3H,MACnB,OAAIA,GACiB,kBAAVA,GACPkE,EAAO2C,KAAK7G,EAAO,WACdyH,EAAY5F,QAAQ7B,EAAM4H,SAAStF,MAAK,SAAStC,GACtD0H,EAAO,OAAQ1H,EAAO6B,EAASC,MAC9B,SAASe,GACV6E,EAAO,QAAS7E,EAAKhB,EAASC,MAI3B2F,EAAY5F,QAAQ7B,GAAOsC,MAAK,SAASuF,GAI9CF,EAAO3H,MAAQ6H,EACfhG,EAAQ8F,MACP,SAASxF,GAGV,OAAOuF,EAAO,QAASvF,EAAON,EAASC,MAvBzCA,EAAO0E,EAAOvE,KA4BlB,IAAI6F,EAgCJlH,KAAK4E,QA9BL,SAAiBG,EAAQ1D,GACvB,SAAS8F,IACP,OAAO,IAAIN,GAAY,SAAS5F,EAASC,GACvC4F,EAAO/B,EAAQ1D,EAAKJ,EAASC,MAIjC,OAAOgG,EAaLA,EAAkBA,EAAgBxF,KAChCyF,EAGAA,GACEA,KAkHV,SAAS7B,EAAoBF,EAAUV,GACrC,IAAIK,EAASK,EAASzB,SAASe,EAAQK,QACvC,GAAIA,IAAW7C,EAAW,CAKxB,GAFAwC,EAAQU,SAAW,KAEI,UAAnBV,EAAQK,OAAoB,CAE9B,GAAIK,EAASzB,SAAT,SAGFe,EAAQK,OAAS,SACjBL,EAAQrD,IAAMa,EACdoD,EAAoBF,EAAUV,GAEP,UAAnBA,EAAQK,QAGV,OAAOQ,EAIXb,EAAQK,OAAS,QACjBL,EAAQrD,IAAM,IAAIzB,UAChB,kDAGJ,OAAO2F,EAGT,IAAIK,EAASC,EAASd,EAAQK,EAASzB,SAAUe,EAAQrD,KAEzD,GAAoB,UAAhBuE,EAAOE,KAIT,OAHApB,EAAQK,OAAS,QACjBL,EAAQrD,IAAMuE,EAAOvE,IACrBqD,EAAQU,SAAW,KACZG,EAGT,IAAIjE,EAAOsE,EAAOvE,IAElB,OAAMC,EAOFA,EAAKE,MAGPkD,EAAQU,EAASgC,YAAc9F,EAAKlC,MAGpCsF,EAAQ2C,KAAOjC,EAASkC,QAQD,WAAnB5C,EAAQK,SACVL,EAAQK,OAAS,OACjBL,EAAQrD,IAAMa,GAUlBwC,EAAQU,SAAW,KACZG,GANEjE,GA3BPoD,EAAQK,OAAS,QACjBL,EAAQrD,IAAM,IAAIzB,UAAU,oCAC5B8E,EAAQU,SAAW,KACZG,GAoDX,SAASgC,EAAaC,GACpB,IAAIC,EAAQ,CAAEC,OAAQF,EAAK,IAEvB,KAAKA,IACPC,EAAME,SAAWH,EAAK,IAGpB,KAAKA,IACPC,EAAMG,WAAaJ,EAAK,GACxBC,EAAMI,SAAWL,EAAK,IAGxBxH,KAAK8H,WAAWC,KAAKN,GAGvB,SAASO,EAAcP,GACrB,IAAI7B,EAAS6B,EAAMQ,YAAc,GACjCrC,EAAOE,KAAO,gBACPF,EAAOvE,IACdoG,EAAMQ,WAAarC,EAGrB,SAASjB,EAAQN,GAIfrE,KAAK8H,WAAa,CAAC,CAAEJ,OAAQ,SAC7BrD,EAAYsC,QAAQY,EAAcvH,MAClCA,KAAKkI,OAAM,GA8Bb,SAAS1B,EAAO2B,GACd,GAAIA,EAAU,CACZ,IAAIC,EAAiBD,EAASzE,GAC9B,GAAI0E,EACF,OAAOA,EAAenC,KAAKkC,GAG7B,GAA6B,oBAAlBA,EAASd,KAClB,OAAOc,EAGT,IAAKE,MAAMF,EAASzJ,QAAS,CAC3B,IAAID,GAAK,EAAG4I,EAAO,SAASA,IAC1B,OAAS5I,EAAI0J,EAASzJ,QACpB,GAAI4E,EAAO2C,KAAKkC,EAAU1J,GAGxB,OAFA4I,EAAKjI,MAAQ+I,EAAS1J,GACtB4I,EAAK7F,MAAO,EACL6F,EAOX,OAHAA,EAAKjI,MAAQ8C,EACbmF,EAAK7F,MAAO,EAEL6F,GAGT,OAAOA,EAAKA,KAAOA,GAKvB,MAAO,CAAEA,KAAMlC,GAIjB,SAASA,IACP,MAAO,CAAE/F,MAAO8C,EAAWV,MAAM,GA+MnC,OA7mBA0E,EAAkB1F,UAAY2F,EAC9BnC,EAAOyC,EAAI,cAAeN,GAC1BnC,EAAOmC,EAA4B,cAAeD,GAClDA,EAAkBoC,YAActE,EAC9BmC,EACArC,EACA,qBAaFhD,EAAQyH,oBAAsB,SAASC,GACrC,IAAIC,EAAyB,oBAAXD,GAAyBA,EAAOE,YAClD,QAAOD,IACHA,IAASvC,GAG2B,uBAAnCuC,EAAKH,aAAeG,EAAKE,QAIhC7H,EAAQ8H,KAAO,SAASJ,GAQtB,OAPIzJ,OAAO8J,eACT9J,OAAO8J,eAAeL,EAAQrC,IAE9BqC,EAAOM,UAAY3C,EACnBnC,EAAOwE,EAAQ1E,EAAmB,sBAEpC0E,EAAOhI,UAAYzB,OAAO0F,OAAOgC,GAC1B+B,GAOT1H,EAAQiI,MAAQ,SAAS1H,GACvB,MAAO,CAAE2F,QAAS3F,IAsEpBqF,EAAsBE,EAAcpG,WACpCwD,EAAO4C,EAAcpG,UAAWoD,GAAqB,WACnD,OAAO5D,QAETc,EAAQ8F,cAAgBA,EAKxB9F,EAAQkI,MAAQ,SAAS7E,EAASC,EAASvC,EAAMwC,EAAawC,QACxC,IAAhBA,IAAwBA,EAAcpF,SAE1C,IAAIwH,EAAO,IAAIrC,EACb1C,EAAKC,EAASC,EAASvC,EAAMwC,GAC7BwC,GAGF,OAAO/F,EAAQyH,oBAAoBnE,GAC/B6E,EACAA,EAAK5B,OAAO3F,MAAK,SAASqF,GACxB,OAAOA,EAAOvF,KAAOuF,EAAO3H,MAAQ6J,EAAK5B,WAuKjDX,EAAsBD,GAEtBzC,EAAOyC,EAAI3C,EAAmB,aAO9BE,EAAOyC,EAAI/C,GAAgB,WACzB,OAAO1D,QAGTgE,EAAOyC,EAAI,YAAY,WACrB,MAAO,wBAkCT3F,EAAQoI,KAAO,SAASC,GACtB,IAAID,EAAO,GACX,IAAK,IAAIjK,KAAOkK,EACdD,EAAKnB,KAAK9I,GAMZ,OAJAiK,EAAKE,UAIE,SAAS/B,IACd,KAAO6B,EAAKxK,QAAQ,CAClB,IAAIO,EAAMiK,EAAKG,MACf,GAAIpK,KAAOkK,EAGT,OAFA9B,EAAKjI,MAAQH,EACboI,EAAK7F,MAAO,EACL6F,EAQX,OADAA,EAAK7F,MAAO,EACL6F,IAsCXvG,EAAQ0F,OAASA,EAMjB7B,EAAQnE,UAAY,CAClBkI,YAAa/D,EAEbuD,MAAO,SAASoB,GAcd,GAbAtJ,KAAKuJ,KAAO,EACZvJ,KAAKqH,KAAO,EAGZrH,KAAKwF,KAAOxF,KAAKyF,MAAQvD,EACzBlC,KAAKwB,MAAO,EACZxB,KAAKoF,SAAW,KAEhBpF,KAAK+E,OAAS,OACd/E,KAAKqB,IAAMa,EAEXlC,KAAK8H,WAAWnB,QAAQqB,IAEnBsB,EACH,IAAK,IAAIX,KAAQ3I,KAEQ,MAAnB2I,EAAKa,OAAO,IACZlG,EAAO2C,KAAKjG,KAAM2I,KACjBN,OAAOM,EAAKc,MAAM,MACrBzJ,KAAK2I,GAAQzG,IAMrBwH,KAAM,WACJ1J,KAAKwB,MAAO,EAEZ,IACImI,EADY3J,KAAK8H,WAAW,GACLG,WAC3B,GAAwB,UAApB0B,EAAW7D,KACb,MAAM6D,EAAWtI,IAGnB,OAAOrB,KAAK4J,MAGdlE,kBAAmB,SAASmE,GAC1B,GAAI7J,KAAKwB,KACP,MAAMqI,EAGR,IAAInF,EAAU1E,KACd,SAAS8J,EAAOC,EAAKC,GAYnB,OAXApE,EAAOE,KAAO,QACdF,EAAOvE,IAAMwI,EACbnF,EAAQ2C,KAAO0C,EAEXC,IAGFtF,EAAQK,OAAS,OACjBL,EAAQrD,IAAMa,KAGN8H,EAGZ,IAAK,IAAIvL,EAAIuB,KAAK8H,WAAWpJ,OAAS,EAAGD,GAAK,IAAKA,EAAG,CACpD,IAAIgJ,EAAQzH,KAAK8H,WAAWrJ,GACxBmH,EAAS6B,EAAMQ,WAEnB,GAAqB,SAAjBR,EAAMC,OAIR,OAAOoC,EAAO,OAGhB,GAAIrC,EAAMC,QAAU1H,KAAKuJ,KAAM,CAC7B,IAAIU,EAAW3G,EAAO2C,KAAKwB,EAAO,YAC9ByC,EAAa5G,EAAO2C,KAAKwB,EAAO,cAEpC,GAAIwC,GAAYC,EAAY,CAC1B,GAAIlK,KAAKuJ,KAAO9B,EAAME,SACpB,OAAOmC,EAAOrC,EAAME,UAAU,GACzB,GAAI3H,KAAKuJ,KAAO9B,EAAMG,WAC3B,OAAOkC,EAAOrC,EAAMG,iBAGjB,GAAIqC,GACT,GAAIjK,KAAKuJ,KAAO9B,EAAME,SACpB,OAAOmC,EAAOrC,EAAME,UAAU,OAG3B,KAAIuC,EAMT,MAAM,IAAIjF,MAAM,0CALhB,GAAIjF,KAAKuJ,KAAO9B,EAAMG,WACpB,OAAOkC,EAAOrC,EAAMG,gBAU9BjC,OAAQ,SAASG,EAAMzE,GACrB,IAAK,IAAI5C,EAAIuB,KAAK8H,WAAWpJ,OAAS,EAAGD,GAAK,IAAKA,EAAG,CACpD,IAAIgJ,EAAQzH,KAAK8H,WAAWrJ,GAC5B,GAAIgJ,EAAMC,QAAU1H,KAAKuJ,MACrBjG,EAAO2C,KAAKwB,EAAO,eACnBzH,KAAKuJ,KAAO9B,EAAMG,WAAY,CAChC,IAAIuC,EAAe1C,EACnB,OAIA0C,IACU,UAATrE,GACS,aAATA,IACDqE,EAAazC,QAAUrG,GACvBA,GAAO8I,EAAavC,aAGtBuC,EAAe,MAGjB,IAAIvE,EAASuE,EAAeA,EAAalC,WAAa,GAItD,OAHArC,EAAOE,KAAOA,EACdF,EAAOvE,IAAMA,EAET8I,GACFnK,KAAK+E,OAAS,OACd/E,KAAKqH,KAAO8C,EAAavC,WAClBrC,GAGFvF,KAAKoK,SAASxE,IAGvBwE,SAAU,SAASxE,EAAQiC,GACzB,GAAoB,UAAhBjC,EAAOE,KACT,MAAMF,EAAOvE,IAcf,MAXoB,UAAhBuE,EAAOE,MACS,aAAhBF,EAAOE,KACT9F,KAAKqH,KAAOzB,EAAOvE,IACM,WAAhBuE,EAAOE,MAChB9F,KAAK4J,KAAO5J,KAAKqB,IAAMuE,EAAOvE,IAC9BrB,KAAK+E,OAAS,SACd/E,KAAKqH,KAAO,OACa,WAAhBzB,EAAOE,MAAqB+B,IACrC7H,KAAKqH,KAAOQ,GAGPtC,GAGT8E,OAAQ,SAASzC,GACf,IAAK,IAAInJ,EAAIuB,KAAK8H,WAAWpJ,OAAS,EAAGD,GAAK,IAAKA,EAAG,CACpD,IAAIgJ,EAAQzH,KAAK8H,WAAWrJ,GAC5B,GAAIgJ,EAAMG,aAAeA,EAGvB,OAFA5H,KAAKoK,SAAS3C,EAAMQ,WAAYR,EAAMI,UACtCG,EAAcP,GACPlC,IAKb,MAAS,SAASmC,GAChB,IAAK,IAAIjJ,EAAIuB,KAAK8H,WAAWpJ,OAAS,EAAGD,GAAK,IAAKA,EAAG,CACpD,IAAIgJ,EAAQzH,KAAK8H,WAAWrJ,GAC5B,GAAIgJ,EAAMC,SAAWA,EAAQ,CAC3B,IAAI9B,EAAS6B,EAAMQ,WACnB,GAAoB,UAAhBrC,EAAOE,KAAkB,CAC3B,IAAIwE,EAAS1E,EAAOvE,IACpB2G,EAAcP,GAEhB,OAAO6C,GAMX,MAAM,IAAIrF,MAAM,0BAGlBsF,cAAe,SAASpC,EAAUf,EAAYE,GAa5C,OAZAtH,KAAKoF,SAAW,CACdzB,SAAU6C,EAAO2B,GACjBf,WAAYA,EACZE,QAASA,GAGS,SAAhBtH,KAAK+E,SAGP/E,KAAKqB,IAAMa,GAGNqD,IAQJzE,EA9sBM,CAqtBgBD,EAAOC,SAGtC,IACE0J,mBAAqBpH,EACrB,MAAOqH,GAWmB,kBAAfC,WACTA,WAAWF,mBAAqBpH,EAEhCuH,SAAS,IAAK,yBAAdA,CAAwCvH","file":"static/js/0.3105f19b.chunk.js","sourcesContent":["function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default __webpack_public_path__ + \"static/media/loading.af71b29a.png\";","import React from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss'\r\nimport loadImage from '../../assets/image/loading.png'\r\nfunction Toast(props) {\r\n    return (\r\n        <>\r\n            <div className=\"over-toast\">{props.value}</div>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction CToast(value, time) {\r\n    let div = document.createElement('div');\r\n    document.body.appendChild(div);\r\n    ReactDOM.render(<Toast value={value} />, div)\r\n    setTimeout(() => {\r\n        document.body.removeChild(div);\r\n    }, time)\r\n}\r\n\r\nfunction LodingToast(props) {\r\n    return <>\r\n        <div className=\"loding-wrap\">\r\n            <div className=\"loding-mask\"></div>\r\n            <div className=\"loading-contant\">\r\n                <div className=\"loding-pic\">\r\n                    <img src={loadImage} alt=\"\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport class ToastLoding {\r\n\r\n    dom = null\r\n\r\n    loading() {\r\n        this.dom = document.createElement('div');\r\n        document.body.appendChild(this.dom);\r\n        ReactDOM.render(<LodingToast />, this.dom)\r\n    }\r\n\r\n    hide() {\r\n        document.body.removeChild(this.dom);\r\n    }\r\n}\r\n\r\nexport default CToast","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","/* original Copyright Brett Ritter, 2021.  Available for use, modification, and redistribution under the terms of the MIT License */\r\n\r\nconst RESOLVE_TIMEOUT_MSEC = 100;\r\n\r\nconst recordsForSet= {};\r\nconst users = {\r\n  cat: {\r\n    username: 'cat',\r\n    access: 'user',\r\n    profile: {},\r\n  },\r\n  dog: {\r\n    username: 'dog',\r\n    // This user will always fail!\r\n  },\r\n  admin: {\r\n    username: 'admin',\r\n    access: 'admin',\r\n    profile: {},\r\n  },\r\n};\r\n\r\nconst getNextId = (\r\n  function generateId() {\r\n    let currentId = 1;\r\n    return () => (currentId++).toString();\r\n  }\r\n)();\r\n\r\n\r\nfunction pinkySwear({ value, withError }={}) {\r\n  // Returns a promise that resolves with value in RESOLVE_TIMEOUT_MSEC\r\n  let resolve;\r\n  let reject\r\n  const promise = new Promise( (res, rej) => {\r\n    resolve = res;\r\n    reject = rej\r\n  });\r\n  setTimeout(\r\n    () => {\r\n      if( withError ) {\r\n        reject({ error: withError });\r\n      } else {\r\n        resolve(value)\r\n      }\r\n    },\r\n    RESOLVE_TIMEOUT_MSEC\r\n  );\r\n  return promise;\r\n}\r\n\r\nexport function fetchLogin(username) {\r\n  // We ignore passwords because security is outside scope of course\r\n  if(username === 'dog') {\r\n    return pinkySwear({ withError: 'invalidPassword' });\r\n  }\r\n  if(!users[username]) {\r\n    return pinkySwear({ withError: 'noSuchUser' });\r\n  }\r\n  // returns a copy of the stored values\r\n  // uses a copy so app can't change stored values by changing these varibles\r\n  return pinkySwear({ value: { ...users[username], profile: { ...users[username].profile } }  });\r\n}\r\n\r\nexport function fetchLogout() {\r\n  return pinkySwear({ value: { username: '' } });\r\n}\r\n\r\nexport function fetchRegister({ username, password, access = 'user', profile = {} }) {\r\n  if(users[username]) {\r\n    return pinkySwear({ withError: 'userExists' });\r\n  }\r\n  return pinkySwear().then( () => {\r\n    users[username] = {\r\n      username,\r\n      access,\r\n      profile: { ...profile },\r\n    };\r\n    return {\r\n      username,\r\n      access,\r\n      profile: { ...profile },\r\n    };\r\n  });\r\n}\r\n\r\nexport function fetchUpdateUser({ username, access, profile }) {\r\n  if(!users[username]) {\r\n    return pinkySwear({ withError: 'noSuchUser' });\r\n  }\r\n  return pinkySwear().then( () => {\r\n    users[username].access = access ?? users[username].access;\r\n    users[username].profile = { ...users[username].profile, ...profile };\r\n    return {\r\n      ...users[username],\r\n      profile: { ...users[username].profile },\r\n    };\r\n  });\r\n}\r\n\r\nexport function fetchCheckUsername(username) {\r\n  return pinkySwear().then( () => {\r\n    if(users[username]) {\r\n      return { result: 'exists' };\r\n    }\r\n    return { result: 'new' };\r\n  });\r\n}\r\n\r\nexport function fetchCreateRecord(set, partial) {\r\n  recordsForSet[set] = recordsForSet[set] || {};\r\n  return pinkySwear().then( () => {\r\n    const id = getNextId();\r\n    recordsForSet[set][id] = {\r\n      ...partial,\r\n      id\r\n    };\r\n    return recordsForSet[set][id];\r\n  });\r\n}\r\n\r\nexport function fetchReplaceRecord(set, record) {\r\n  recordsForSet[set] = recordsForSet[set] || {};\r\n  const id = record.id;\r\n  if(!recordsForSet[set][id]) {\r\n    return pinkySwear({ withError: 'noSuchRecord' });\r\n  }\r\n  return pinkySwear().then( () => {\r\n    recordsForSet[set][id] = {\r\n      ...record,\r\n      id\r\n    };\r\n    return recordsForSet[set][id];\r\n  });\r\n}\r\n\r\nexport function fetchRecordById(set, id) {\r\n  recordsForSet[set] = recordsForSet[set] || {};\r\n  if(!recordsForSet[set][id]) {\r\n    return pinkySwear({ withError: 'noSuchRecord' });\r\n  }\r\n  return pinkySwear().then( () => {\r\n    return recordsForSet[set][id];\r\n  });\r\n}\r\n\r\nexport function fetchDeleteRecord(set, id) {\r\n  recordsForSet[set] = recordsForSet[set] || {};\r\n  if(!recordsForSet[set][id]) {\r\n    return pinkySwear({ value: 'noSuchRecord' });\r\n  }\r\n  return pinkySwear().then( () => {\r\n    delete recordsForSet[set][id];\r\n    return 'recordDeleted';\r\n  });\r\n}\r\n\r\nexport function fetchUpdateRecord(set, partial) {\r\n  recordsForSet[set] = recordsForSet[set] || {};\r\n  const id = partial.id;\r\n  if(!recordsForSet[set][id]) {\r\n    return pinkySwear({ withError: 'noSuchRecord' });\r\n  }\r\n  return pinkySwear().then( () => {\r\n    recordsForSet[set][id] = {\r\n      ...recordsForSet[set][id],\r\n      ...partial,\r\n      id\r\n    };\r\n    return recordsForSet[set][id];\r\n  });\r\n}\r\n\r\nexport function fetchRecords(set) {\r\n  recordsForSet[set] = recordsForSet[set] || {};\r\n  return pinkySwear().then( () => {\r\n    return Object.keys(recordsForSet[set]);\r\n  });\r\n}\r\n\r\n\r\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n"],"sourceRoot":""}